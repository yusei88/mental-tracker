name: Backend CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt', 'backend/requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run tests with coverage
      working-directory: ./backend
      env:
        DATABASE_URL: "mongodb://test:test@localhost:27017/test"
      run: |
        python -m pytest tests/ --cov=app --cov-report=term-missing --cov-report=xml --cov-report=html
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        file: ./backend/coverage.xml
        directory: ./backend
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // coverage.xmlファイルを読み取り、カバレッジ情報を抽出
          try {
            const coverageXml = fs.readFileSync('./backend/coverage.xml', 'utf8');
            const coverageMatch = coverageXml.match(/line-rate="([^"]+)"/);
            const coverage = coverageMatch ? Math.round(parseFloat(coverageMatch[1]) * 100) : 'N/A';
            
            const comment = `## 📊 バックエンドテスト結果
            
            ✅ テストが正常に完了しました
            
            📈 **カバレッジ: ${coverage}%**
            
            詳細なカバレッジレポートはArtifactsからダウンロードできます。
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('カバレッジ情報の取得に失敗しました:', error);
          }
          
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: backend/htmlcov/
        retention-days: 30