/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/entries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Entries */
        get: operations["get_entries_entries_get"];
        put?: never;
        /** Add Entry */
        post: operations["add_entry_entries_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** EntriesResponse */
        EntriesResponse: {
            /** Status */
            status: string;
            /** Entries */
            entries: components["schemas"]["Entry-Output"][];
        };
        /** Entry */
        "Entry-Input": {
            /**
             * Id
             * @description エントリーID（自動生成、任意）
             * @example dummy_id
             */
            _id?: string | null;
            /**
             * Record Date
             * Format: date
             * @description 記録日（必須、YYYY-MM-DD形式）
             * @example 2025-08-14
             */
            record_date: string;
            /**
             * Mood Score
             * @description メンタルスコア（必須、0〜5の整数）
             * @example 4
             */
            mood_score: number;
            /**
             * Sleep Hours
             * @description 睡眠時間（必須、0以上の小数）
             * @example 6.5
             */
            sleep_hours: number;
            /**
             * Memo
             * @description メモ（任意、空文字可）
             * @example 今日はよく眠れた
             */
            memo?: string | null;
        };
        /** Entry */
        "Entry-Output": {
            /**
             * Id
             * @description エントリーID（自動生成、任意）
             * @example dummy_id
             */
            id?: string | null;
            /**
             * Record Date
             * @description 記録日（必須、YYYY-MM-DD形式）
             * @example 2025-08-14
             */
            record_date: string;
            /**
             * Mood Score
             * @description メンタルスコア（必須、0〜5の整数）
             * @example 4
             */
            mood_score: number;
            /**
             * Sleep Hours
             * @description 睡眠時間（必須、0以上の小数）
             * @example 6.5
             */
            sleep_hours: number;
            /**
             * Memo
             * @description メモ（任意、空文字可）
             * @example 今日はよく眠れた
             */
            memo?: string | null;
        };
        /** EntryResponse */
        EntryResponse: {
            /** Status */
            status: string;
            entry: components["schemas"]["Entry-Output"];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_entries_entries_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EntriesResponse"];
                };
            };
        };
    };
    add_entry_entries_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Entry-Input"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EntryResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
